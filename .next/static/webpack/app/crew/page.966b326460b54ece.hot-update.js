"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/crew/page",{

/***/ "(app-pages-browser)/./src/components/gold-stash.tsx":
/*!***************************************!*\
  !*** ./src/components/gold-stash.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GoldStash)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/supabase-client */ \"(app-pages-browser)/./src/lib/supabase-client.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction GoldStash() {\n    _s();\n    const [gold, setGold] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n    const [changeValue, setChangeValue] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n    async function updateData() {\n        const { data, error } = await lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.supabase.from('ship_info').update({\n            crew_gold: gold\n        }).eq('id', 1) // not programmatic atm\n        ;\n        console.log('are we doing this right?');\n        if (error) {\n            console.error('Error updating data for ship_info table:', error);\n            return [];\n        }\n        return data;\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"GoldStash.useEffect\": ()=>{\n            const fetchData = {\n                \"GoldStash.useEffect.fetchData\": async ()=>{\n                    const { data, error } = await lib_supabase_client__WEBPACK_IMPORTED_MODULE_1__.supabase.from('ship_info').select().eq('crew_name', \"Bethany's Revenge\") // not programmatic atm\n                    ;\n                    if (data) {\n                        setGold(data.at(0).crew_gold);\n                    }\n                    if (error) {\n                        console.error('Error fetching from ship_info table:', error);\n                        return [];\n                    }\n                    return data;\n                }\n            }[\"GoldStash.useEffect.fetchData\"];\n            fetchData();\n        }\n    }[\"GoldStash.useEffect\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"GoldStash.useEffect\": ()=>{\n            console.log(\"mutate row\");\n            updateData();\n        }\n    }[\"GoldStash.useEffect\"], [\n        gold\n    ]);\n    const incrementGold = ()=>{\n        setGold(gold + changeValue);\n    };\n    const decrementGold = ()=>{\n        setGold(gold - changeValue);\n    };\n    const handleValueChange = (event)=>{\n        const val = parseInt(event.target.value);\n        setChangeValue(isNaN(val) ? 0 : val);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                children: [\n                    \"Gold: \",\n                    gold\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\MyProjects\\\\PartyTools\\\\src\\\\components\\\\gold-stash.tsx\",\n                lineNumber: 66,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: decrementGold,\n                children: \"-\"\n            }, void 0, false, {\n                fileName: \"C:\\\\MyProjects\\\\PartyTools\\\\src\\\\components\\\\gold-stash.tsx\",\n                lineNumber: 67,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                name: \"gold\",\n                value: changeValue,\n                onChange: handleValueChange\n            }, void 0, false, {\n                fileName: \"C:\\\\MyProjects\\\\PartyTools\\\\src\\\\components\\\\gold-stash.tsx\",\n                lineNumber: 68,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: incrementGold,\n                children: \"+\"\n            }, void 0, false, {\n                fileName: \"C:\\\\MyProjects\\\\PartyTools\\\\src\\\\components\\\\gold-stash.tsx\",\n                lineNumber: 73,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\MyProjects\\\\PartyTools\\\\src\\\\components\\\\gold-stash.tsx\",\n        lineNumber: 65,\n        columnNumber: 5\n    }, this);\n}\n_s(GoldStash, \"NDVk+EpbOLPSQtQOn8sbaD9wIE8=\");\n_c = GoldStash;\nvar _c;\n$RefreshReg$(_c, \"GoldStash\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2dvbGQtc3Rhc2gudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFFOEM7QUFFSDtBQUk1QixTQUFTRzs7SUFDdEIsTUFBTSxDQUFDQyxNQUFNQyxRQUFRLEdBQUdILCtDQUFRQSxDQUFDO0lBQ2pDLE1BQU0sQ0FBQ0ksYUFBYUMsZUFBZSxHQUFHTCwrQ0FBUUEsQ0FBQztJQUUvQyxlQUFlTTtRQUNiLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNVix5REFBUUEsQ0FDbkNXLElBQUksQ0FBQyxhQUNMQyxNQUFNLENBQUM7WUFBQ0MsV0FBV1Q7UUFBSSxHQUN2QlUsRUFBRSxDQUFDLE1BQU0sR0FBRyx1QkFBdUI7O1FBRXBDQyxRQUFRQyxHQUFHLENBQUM7UUFDZCxJQUFJTixPQUFPO1lBQ1RLLFFBQVFMLEtBQUssQ0FBQyw0Q0FBNENBO1lBQzFELE9BQU8sRUFBRTtRQUNYO1FBQ0EsT0FBT0Q7SUFDVDtJQUVBUixnREFBU0E7K0JBQUM7WUFDUixNQUFNZ0I7aURBQVk7b0JBQ2hCLE1BQU0sRUFBRVIsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNVix5REFBUUEsQ0FDbkNXLElBQUksQ0FBQyxhQUNMTyxNQUFNLEdBQ05KLEVBQUUsQ0FBQyxhQUFhLHFCQUFxQix1QkFBdUI7O29CQUMvRCxJQUFJTCxNQUFNO3dCQUNSSixRQUFRSSxLQUFLVSxFQUFFLENBQUMsR0FBR04sU0FBUztvQkFDOUI7b0JBQ0EsSUFBSUgsT0FBTzt3QkFDVEssUUFBUUwsS0FBSyxDQUFDLHdDQUF3Q0E7d0JBQ3RELE9BQU8sRUFBRTtvQkFDWDtvQkFDQSxPQUFPRDtnQkFDVDs7WUFFQVE7UUFDRjs4QkFBRyxFQUFFO0lBRUxoQixnREFBU0E7K0JBQUM7WUFDUmMsUUFBUUMsR0FBRyxDQUFDO1lBQ1pSO1FBQ0Y7OEJBQUc7UUFBQ0o7S0FBSztJQUVULE1BQU1nQixnQkFBZ0I7UUFDcEJmLFFBQVFELE9BQU9FO0lBQ2pCO0lBRUEsTUFBTWUsZ0JBQWdCO1FBQ3BCaEIsUUFBUUQsT0FBT0U7SUFDakI7SUFFQSxNQUFNZ0Isb0JBQW9CLENBQUNDO1FBQ3pCLE1BQU1DLE1BQU1DLFNBQVNGLE1BQU1HLE1BQU0sQ0FBQ0MsS0FBSztRQUN2Q3BCLGVBQWVxQixNQUFNSixPQUFPLElBQUlBO0lBQ2xDO0lBRUEscUJBQ0UsOERBQUNLOzswQkFDQyw4REFBQ0M7O29CQUFFO29CQUFPMUI7Ozs7Ozs7MEJBQ1YsOERBQUMyQjtnQkFBT0MsU0FBU1g7MEJBQWU7Ozs7OzswQkFDaEMsOERBQUNZO2dCQUNDQyxNQUFLO2dCQUNMUCxPQUFPckI7Z0JBQ1A2QixVQUFVYjs7Ozs7OzBCQUVaLDhEQUFDUztnQkFBT0MsU0FBU1o7MEJBQWU7Ozs7Ozs7Ozs7OztBQUd0QztHQW5Fd0JqQjtLQUFBQSIsInNvdXJjZXMiOlsiQzpcXE15UHJvamVjdHNcXFBhcnR5VG9vbHNcXHNyY1xcY29tcG9uZW50c1xcZ29sZC1zdGFzaC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXHJcblxyXG5pbXBvcnQgeyBzdXBhYmFzZSB9IGZyb20gJ2xpYi9zdXBhYmFzZS1jbGllbnQnXHJcblxyXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7IHVwZGF0ZURhdGEgfSBmcm9tICdAL2FwcC9hY3Rpb25zJ1xyXG5pbXBvcnQgeyBTaGlwSW5mbyB9IGZyb20gJ0AvdHlwZXMvc2hpcC1pbmZvJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR29sZFN0YXNoKCkge1xyXG4gIGNvbnN0IFtnb2xkLCBzZXRHb2xkXSA9IHVzZVN0YXRlKDApXHJcbiAgY29uc3QgW2NoYW5nZVZhbHVlLCBzZXRDaGFuZ2VWYWx1ZV0gPSB1c2VTdGF0ZSgwKVxyXG5cclxuICBhc3luYyBmdW5jdGlvbiB1cGRhdGVEYXRhKCkge1xyXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcclxuICAgICAgLmZyb20oJ3NoaXBfaW5mbycpXHJcbiAgICAgIC51cGRhdGUoe2NyZXdfZ29sZDogZ29sZH0pXHJcbiAgICAgIC5lcSgnaWQnLCAxKSAvLyBub3QgcHJvZ3JhbW1hdGljIGF0bVxyXG5cclxuICAgICAgY29uc29sZS5sb2coJ2FyZSB3ZSBkb2luZyB0aGlzIHJpZ2h0PycpXHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgdXBkYXRpbmcgZGF0YSBmb3Igc2hpcF9pbmZvIHRhYmxlOicsIGVycm9yKVxyXG4gICAgICByZXR1cm4gW11cclxuICAgIH1cclxuICAgIHJldHVybiBkYXRhXHJcbiAgfVxyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc3QgZmV0Y2hEYXRhID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxyXG4gICAgICAgIC5mcm9tKCdzaGlwX2luZm8nKVxyXG4gICAgICAgIC5zZWxlY3QoKVxyXG4gICAgICAgIC5lcSgnY3Jld19uYW1lJywgXCJCZXRoYW55J3MgUmV2ZW5nZVwiKSAvLyBub3QgcHJvZ3JhbW1hdGljIGF0bVxyXG4gICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgIHNldEdvbGQoZGF0YS5hdCgwKS5jcmV3X2dvbGQpXHJcbiAgICAgIH1cclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgZnJvbSBzaGlwX2luZm8gdGFibGU6JywgZXJyb3IpXHJcbiAgICAgICAgcmV0dXJuIFtdXHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGRhdGFcclxuICAgIH1cclxuXHJcbiAgICBmZXRjaERhdGEoKVxyXG4gIH0sIFtdKVxyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCJtdXRhdGUgcm93XCIpXHJcbiAgICB1cGRhdGVEYXRhKClcclxuICB9LCBbZ29sZF0pXHJcblxyXG4gIGNvbnN0IGluY3JlbWVudEdvbGQgPSAoKSA9PiB7XHJcbiAgICBzZXRHb2xkKGdvbGQgKyBjaGFuZ2VWYWx1ZSlcclxuICB9XHJcblxyXG4gIGNvbnN0IGRlY3JlbWVudEdvbGQgPSAoKSA9PiB7XHJcbiAgICBzZXRHb2xkKGdvbGQgLSBjaGFuZ2VWYWx1ZSlcclxuICB9XHJcblxyXG4gIGNvbnN0IGhhbmRsZVZhbHVlQ2hhbmdlID0gKGV2ZW50OiB7IHRhcmdldDogeyB2YWx1ZTogc3RyaW5nIH0gfSkgPT4ge1xyXG4gICAgY29uc3QgdmFsID0gcGFyc2VJbnQoZXZlbnQudGFyZ2V0LnZhbHVlKVxyXG4gICAgc2V0Q2hhbmdlVmFsdWUoaXNOYU4odmFsKSA/IDAgOiB2YWwpXHJcbiAgfVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdj5cclxuICAgICAgPHA+R29sZDoge2dvbGR9PC9wPlxyXG4gICAgICA8YnV0dG9uIG9uQ2xpY2s9e2RlY3JlbWVudEdvbGR9Pi08L2J1dHRvbj5cclxuICAgICAgPGlucHV0XHJcbiAgICAgICAgbmFtZT1cImdvbGRcIlxyXG4gICAgICAgIHZhbHVlPXtjaGFuZ2VWYWx1ZX1cclxuICAgICAgICBvbkNoYW5nZT17aGFuZGxlVmFsdWVDaGFuZ2V9XHJcbiAgICAgIC8+XHJcbiAgICAgIDxidXR0b24gb25DbGljaz17aW5jcmVtZW50R29sZH0+KzwvYnV0dG9uPlxyXG4gICAgPC9kaXY+XHJcbiAgKVxyXG59Il0sIm5hbWVzIjpbInN1cGFiYXNlIiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJHb2xkU3Rhc2giLCJnb2xkIiwic2V0R29sZCIsImNoYW5nZVZhbHVlIiwic2V0Q2hhbmdlVmFsdWUiLCJ1cGRhdGVEYXRhIiwiZGF0YSIsImVycm9yIiwiZnJvbSIsInVwZGF0ZSIsImNyZXdfZ29sZCIsImVxIiwiY29uc29sZSIsImxvZyIsImZldGNoRGF0YSIsInNlbGVjdCIsImF0IiwiaW5jcmVtZW50R29sZCIsImRlY3JlbWVudEdvbGQiLCJoYW5kbGVWYWx1ZUNoYW5nZSIsImV2ZW50IiwidmFsIiwicGFyc2VJbnQiLCJ0YXJnZXQiLCJ2YWx1ZSIsImlzTmFOIiwiZGl2IiwicCIsImJ1dHRvbiIsIm9uQ2xpY2siLCJpbnB1dCIsIm5hbWUiLCJvbkNoYW5nZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/gold-stash.tsx\n"));

/***/ })

});